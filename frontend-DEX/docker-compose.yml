version: '3.8'

services:
  app:
    container_name: pokedex-frontend
    build: .
    ports:
      - '80:80'
    depends_on:
      backend:
        condition: service_started
  
  backend:
    container_name: pokedex-backend
    build: ../backend-DEX
    ports:
      - 8080:3000
    depends_on:
      postgres_db:
        condition: service_healthy
    volumes:
      - ./starter-backend.sh:/usr/src/app/starter-backend.sh
      - ./wait-for-it.sh:/usr/src/app/wait-for-it.sh
    command: ./starter-backend.sh
      
  postgres_db:
    container_name: "${TYPEORM_HOST}"
    image: postgres
    restart: unless-stopped
    volumes:
        - ../backend-DEX/db/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    environment:
        LC_ALL: C.UTF-8
        POSTGRES_USER: "${TYPEORM_USERNAME}"
        POSTGRES_PASSWORD: "${TYPEORM_PASSWORD}"
        POSTGRES_DB: "${TYPEORM_DATABASE}"  
    expose:
        - ${TYPEORM_PORT}
    ports:  
        - ${TYPEORM_PORT}:${TYPEORM_PORT}
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 1s
        timeout: 3s
        retries: 30
              
    
